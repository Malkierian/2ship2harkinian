#include <libultraship/libultraship.h>
#include "2s2h/GameInteractor/GameInteractor.h"
#include "2s2h/ShipInit.hpp"

#include "2s2h/Rando/Logic/Logic.h"

using namespace Rando::Logic;

// clang-format off
static RegisterShipInitFunc initFunc([]() {
    Regions[RR_GREAT_BAY_TEMPLE_BOSS_ROOM] = RandoRegion{ .sceneId = SCENE_SEA_BS,
        .checks = {
            // TODO: CAN_KILL_BOSS(Gyorg)?
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_HC, CAN_BE_ZORA && HAS_MAGIC),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_WARP, CAN_BE_ZORA && HAS_MAGIC),
        },
        .exits = { //     TO                                         FROM
            EXIT(ENTRANCE(ZORA_CAPE, 9),                             ONE_WAY_EXIT, true),
        },
        .oneWayEntrances = {
            ENTRANCE(GYORGS_LAIR, 0), // Great Bay Temple Pre Boss Room
        },
    };
    // TODO: Split this up into regions
    Regions[RR_GREAT_BAY_TEMPLE] = RandoRegion{ .sceneId = SCENE_SEA,
        .checks = {
            CHECK(RC_GREAT_BAY_TEMPLE_BABA_CHEST, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_KEY, true),
            CHECK(RC_GREAT_BAY_TEMPLE_COMPASS_ROOM_UNDERWATER, true),
            CHECK(RC_GREAT_BAY_TEMPLE_COMPASS, true),
            CHECK(RC_GREAT_BAY_TEMPLE_ENTRANCE_CHEST, true),
            CHECK(RC_GREAT_BAY_TEMPLE_GREEN_PIPE_1_CHEST, true),
            CHECK(RC_GREAT_BAY_TEMPLE_GREEN_PIPE_2_LOWER_CHEST, true),
            CHECK(RC_GREAT_BAY_TEMPLE_GREEN_PIPE_2_UPPER_CHEST, true),
            CHECK(RC_GREAT_BAY_TEMPLE_GREEN_PIPE_3_CHEST, true),
            CHECK(RC_GREAT_BAY_TEMPLE_ICE_ARROW, true),
            CHECK(RC_GREAT_BAY_TEMPLE_MAP, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_CENTRAL_ROOM_BARREL, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_CENTRAL_ROOM_UNDERWATER_POT, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_COMPASS_ROOM_POT, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_GREEN_PIPE_3_BARREL, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_MAP_ROOM_POT, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_PRE_BOSS_ABOVE_WATER, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_PRE_BOSS_UNDERWATER, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_WATER_WHEEL_PLATFORM, true),
            CHECK(RC_GREAT_BAY_TEMPLE_SF_WATER_WHEEL_SKULLTULA, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_UNDERWATER_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_UNDERWATER_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_UNDERWATER_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_POT_UNDERWATER_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_BOSS_WARP, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_10, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_11, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_12, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_5, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_6, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_7, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_8, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_BEFORE_WART_9, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_CENTRAL_ROOM_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_CENTRAL_ROOM_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_SURFACE_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_SURFACE_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_SURFACE_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_SURFACE_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_WATER_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_WATER_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_COMPASS_ROOM_WATER_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_1_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_1_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_1_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_1_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_5, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_6, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_7, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_2_8, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_3_LOWER, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_3_UPPER_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_GREEN_PIPE_3_UPPER_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_SURFACE_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_SURFACE_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_SURFACE_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_5, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_6, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_7, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_MAP_ROOM_WATER_8, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_5, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_6, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_7, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_PRE_BOSS_8, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_RED_PIPE_BEFORE_WART_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_RED_PIPE_BEFORE_WART_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_RED_PIPE_BEFORE_WART_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_RED_PIPE_BEFORE_WART_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_1, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_2, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_3, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_4, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_5, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_6, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_7, true),
            CHECK(RC_GREAT_BAY_TEMPLE_POT_WART_8, true),
        },
        .exits = { //     TO                                         FROM
            EXIT(ENTRANCE(ZORA_CAPE, 7),                    ENTRANCE(GREAT_BAY_TEMPLE, 1), true),
            EXIT(ENTRANCE(GYORGS_LAIR, 0),                           ONE_WAY_EXIT, CHECK_DUNGEON_ITEM(DUNGEON_BOSS_KEY, DUNGEON_INDEX_GREAT_BAY_TEMPLE)),
        },
    };
}, {});
// clang-format on
